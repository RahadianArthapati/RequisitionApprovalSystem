//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RQNApprovalSystem.RAS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://20.110.1.5:8092/RAS_NEW/Service1.asmx";
        }
        
        public Service1(string url) {
            this.Url = url;
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFieldValueNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public cemFieldValue[] getFieldValueNew(string fldname) {
            object[] results = this.Invoke("getFieldValueNew", new object[] {
                        fldname});
            return ((cemFieldValue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetFieldValueNew(string fldname, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getFieldValueNew", new object[] {
                        fldname}, callback, asyncState);
        }
        
        /// <remarks/>
        public cemFieldValue[] EndgetFieldValueNew(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cemFieldValue[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDetailRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public cemDetailRequisition[] getDetailRequisition(string sDocNumber) {
            object[] results = this.Invoke("getDetailRequisition", new object[] {
                        sDocNumber});
            return ((cemDetailRequisition[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDetailRequisition(string sDocNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDetailRequisition", new object[] {
                        sDocNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public cemDetailRequisition[] EndgetDetailRequisition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cemDetailRequisition[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPendingRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public cemPendingRequisition[] getPendingRequisition(string sNxtactionr) {
            object[] results = this.Invoke("getPendingRequisition", new object[] {
                        sNxtactionr});
            return ((cemPendingRequisition[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPendingRequisition(string sNxtactionr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPendingRequisition", new object[] {
                        sNxtactionr}, callback, asyncState);
        }
        
        /// <remarks/>
        public cemPendingRequisition[] EndgetPendingRequisition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cemPendingRequisition[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserAD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserAD(string sDomain, string sUserID, string sPassword) {
            object[] results = this.Invoke("getUserAD", new object[] {
                        sDomain,
                        sUserID,
                        sPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetUserAD(string sDomain, string sUserID, string sPassword, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUserAD", new object[] {
                        sDomain,
                        sUserID,
                        sPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetUserAD(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDetailFlow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public cemDetailFlow[] getDetailFlow(string sDocNumber) {
            object[] results = this.Invoke("getDetailFlow", new object[] {
                        sDocNumber});
            return ((cemDetailFlow[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDetailFlow(string sDocNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDetailFlow", new object[] {
                        sDocNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public cemDetailFlow[] EndgetDetailFlow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((cemDetailFlow[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBranch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getBranch() {
            object[] results = this.Invoke("getBranch", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetBranch(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getBranch", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndgetBranch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vInsertRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string vInsertRequisition(string sBranchCode, string sDocNumber, string sAction, string sDateTime) {
            object[] results = this.Invoke("vInsertRequisition", new object[] {
                        sBranchCode,
                        sDocNumber,
                        sAction,
                        sDateTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvInsertRequisition(string sBranchCode, string sDocNumber, string sAction, string sDateTime, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("vInsertRequisition", new object[] {
                        sBranchCode,
                        sDocNumber,
                        sAction,
                        sDateTime}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndvInsertRequisition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vUploadtoAccpac", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string vUploadtoAccpac() {
            object[] results = this.Invoke("vUploadtoAccpac", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvUploadtoAccpac(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("vUploadtoAccpac", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndvUploadtoAccpac(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vGetDocumentWorkflow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] vGetDocumentWorkflow() {
            object[] results = this.Invoke("vGetDocumentWorkflow", new object[0]);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvGetDocumentWorkflow(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("vGetDocumentWorkflow", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndvGetDocumentWorkflow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vPushRegistration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string vPushRegistration(string sUserID, string sRegistrationID, bool isRegister) {
            object[] results = this.Invoke("vPushRegistration", new object[] {
                        sUserID,
                        sRegistrationID,
                        isRegister});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvPushRegistration(string sUserID, string sRegistrationID, bool isRegister, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("vPushRegistration", new object[] {
                        sUserID,
                        sRegistrationID,
                        isRegister}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndvPushRegistration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/vClearTemporaryRequisition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string vClearTemporaryRequisition(string sNxtactionr) {
            object[] results = this.Invoke("vClearTemporaryRequisition", new object[] {
                        sNxtactionr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginvClearTemporaryRequisition(string sNxtactionr, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("vClearTemporaryRequisition", new object[] {
                        sNxtactionr}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndvClearTemporaryRequisition(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class cemFieldValue {
        
        /// <remarks/>
        public string fld_valu;
        
        /// <remarks/>
        public string fld_desc;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class cemDetailFlow {
        
        /// <remarks/>
        public string EVENTSEQ;
        
        /// <remarks/>
        public string STEPNUM;
        
        /// <remarks/>
        public string STEPTYPE;
        
        /// <remarks/>
        public string STEPDESC;
        
        /// <remarks/>
        public string EVENTDATE;
        
        /// <remarks/>
        public string EVENTTIME;
        
        /// <remarks/>
        public string USERID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class cemPendingRequisition {
        
        /// <remarks/>
        public string BRANCHCODE;
        
        /// <remarks/>
        public string DOCNUMBER;
        
        /// <remarks/>
        public string DESCRIPTIO;
        
        /// <remarks/>
        public string REQRID;
        
        /// <remarks/>
        public string REQRNAME;
        
        /// <remarks/>
        public string REQDATE;
        
        /// <remarks/>
        public string COSTCTR;
        
        /// <remarks/>
        public string ACTION;
        
        /// <remarks/>
        public string RQNTOTVALUE;
        
        /// <remarks/>
        public string RQNCURRCODE;
        
        /// <remarks/>
        public string RQRDDATE;
        
        /// <remarks/>
        public string COMMENT;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class cemDetailRequisition {
        
        /// <remarks/>
        public string RQNLSEQ;
        
        /// <remarks/>
        public string ITEMNO;
        
        /// <remarks/>
        public string COSTCTR;
        
        /// <remarks/>
        public string FMTITEMNO;
        
        /// <remarks/>
        public string ITEMDESC;
        
        /// <remarks/>
        public string VDCODE;
        
        /// <remarks/>
        public string VDNAME;
        
        /// <remarks/>
        public string LOCATION;
        
        /// <remarks/>
        public string RQRDDATE;
        
        /// <remarks/>
        public string REQQTY;
        
        /// <remarks/>
        public string ORDERUNIT;
        
        /// <remarks/>
        public string UNITCOST;
        
        /// <remarks/>
        public string CURRCODE;
    }
}
